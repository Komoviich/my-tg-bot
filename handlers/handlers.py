import aiohttp
from aiogram import Router, types
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from keyboard.keyboard import inline_keyboard

router = Router()

# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command(commands=["start"]))
async def start_command(message: Message):
    user_name = message.from_user.first_name or "–¥—Ä—É–≥"
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–Ω–æ–ø–∫–∏
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç!{user_name} –í–æ—Ç –º–æ–∏ –∫–Ω–æ–ø–∫–∏:",
        reply_markup=inline_keyboard
    )

@router.callback_query(lambda c: c.data == "choose_profession")
async def handle_choose_profession(callback_query: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏."""
    from handlers.choose_profession import start_choose
    await start_choose(callback_query.message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü—Ä–∏–≤–µ—Ç"
@router.callback_query(lambda c: c.data == "start")
async def handle_start(callback_query: CallbackQuery):
    user_name = callback_query.from_user.first_name or "–¥—Ä—É–≥"
    await callback_query.message.answer(f"–ü—Ä–∏–≤–µ—Ç, {user_name}! –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å!")
    await callback_query.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–æ–ø"
@router.callback_query(lambda c: c.data == "stop")
async def handle_stop(callback_query: CallbackQuery):
    user_name = callback_query.from_user.first_name or "–¥—Ä—É–≥"
    await callback_query.message.answer(f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {user_name}! –ë—É–¥—É –∂–¥–∞—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!")
    await callback_query.answer()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–õ–∏—Å–∞"
@router.callback_query(lambda c: c.data == "fox")
async def handle_fox(callback_query: CallbackQuery):
    user_name = callback_query.from_user.first_name or "–¥—Ä—É–≥"
    url = "https://randomfox.ca/floof/"
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            if response.status == 200:
                data = await response.json()
                fox_image_url = data.get("image")
                if fox_image_url:
                    await callback_query.message.answer_photo(
                        fox_image_url, caption=f"–í–æ—Ç —Ç–µ–±–µ —Å–ª—É—á–∞–π–Ω–∞—è –ª–∏—Å–∞, {user_name}! ü¶ä"
                    )
                else:
                    await callback_query.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Å—ã. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞!")
            else:
                await callback_query.message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ!")
    await callback_query.answer()